name: Run Sonar

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Run Sonar
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
           
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path ~/.sonar/scanner
      
      - name: Install project dependencies
        run: dotnet restore
      
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          
          ~/.sonar/scanner/dotnet-sonarscanner begin \
          /k:jacksonveroneze_ViaCepAPI \
          /o:jacksonveroneze \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.opencover.reportsPaths=./src/JacksonVeroneze.ViaCepApi.Tests/coverage.opencover.xml \
          /d:sonar.exclusions="./src/JacksonVeroneze.ViaCepApi.Tests/**" \
          /d:sonar.coverage.exclusions="./src/JacksonVeroneze.ViaCepApi.Tests/**" \
          /v:${{ github.run_id }}
          
          dotnet build --configuration Release --no-restore
          
          ~/.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
